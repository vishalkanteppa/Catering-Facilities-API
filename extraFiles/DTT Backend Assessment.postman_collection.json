{
	"info": {
		"_postman_id": "05c68fe6-6bdc-43c4-8b28-07ffc3085552",
		"name": "DTT Backend Assessment",
		"description": "This document outlines the guidelines for all requests related to the assessment.\n\nBelow is an example of how responses will be structured.\n\n``` json\n    { \n        \"success\": true, \n        \"message\": \"Facility successfully created!\" \n    }\n\n ```",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10129698",
		"_collection_link": "https://gold-shuttle-719915.postman.co/workspace/d5b54e21-181c-44d1-86a7-33eb9f40e894/collection/10129698-05c68fe6-6bdc-43c4-8b28-07ffc3085552?action=share&source=collection_link&creator=10129698"
	},
	"item": [
		{
			"name": "Read All Facilities",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/facilities",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"facilities"
					]
				},
				"description": "Obtains all facilities in the database along with location and tags\n\n#### Responses\n\n- Success: **200 OK**\n    \n- Resource not found: **404 not found**"
			},
			"response": []
		},
		{
			"name": "Read Facility by Name",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/facilities/{faciilityName}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"facilities",
						"{faciilityName}"
					]
				},
				"description": "Obtains a facility along with its location and tags by faciilty name\n\n#### Responses\n\n- Success: **200 OK**\n    \n- Resource not found: **404 not found**"
			},
			"response": []
		},
		{
			"name": "Create Facility",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Facility A\",\n    \"locationData\": {\n        \"city\": \"Amsterdam\",\n        \"address\": \"Street 1\",\n        \"zip_code\": \"1011AB\",\n        \"country_code\": \"NL\",\n        \"phone_number\": \"1234567890\"\n    },\n    \"tagNames\": [\"Tag H\", \"Tag B\"]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/facilities",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"facilities"
					]
				},
				"description": "Creates a facility with the specified location and tags associated with it\n\n#### Responses:\n\n- Success: **201 created**\n    \n- Conflict: **409 conflict**"
			},
			"response": []
		},
		{
			"name": "Update Facility",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"oldName\": \"Facility A\",\n    \"newName\": \"Facility B\",\n    \"tagNames\": {\n        \"Tag B\" : \"Tag P\"\n    }\n}   ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/facilities",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"facilities"
					]
				},
				"description": "Updates a facility and its associated tags\n\n#### Responses:\n\n- Success: **200 OK**\n    \n- Resource not found: **404 not found**\n    \n- Conflict: **409 conflict**\n    \n\nRequest body is as shown below:\n\n``` json\n    {\n    \"oldName\": \"Facility A\",\n    \"newName\": \"Facility B\",\n    \"tagNames\": {\n        \"oldTagName\" : \"newTagName\"\n    }\n}   \n\n ```"
			},
			"response": []
		},
		{
			"name": "Delete Facility",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/facilities/{facilityName}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"facilities",
						"{facilityName}"
					]
				},
				"description": "Deletes a facility and its associated tags\n\n#### Responses\n\n- Success: **200 OK**\n    \n- Resource not found: **404 not found**"
			},
			"response": []
		},
		{
			"name": "Filter Facilities by Criteria",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/facilities/search?facility_name=Facility A&tag_name=Tag H&location_city=Leiden",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"facilities",
						"search"
					],
					"query": [
						{
							"key": "facility_name",
							"value": "Facility A"
						},
						{
							"key": "tag_name",
							"value": "Tag H"
						},
						{
							"key": "location_city",
							"value": "Leiden"
						}
					]
				},
				"description": "Search for facilities that match some criteria. Facility name, Tag names and City of Location can be used to filter by."
			},
			"response": []
		}
	]
}